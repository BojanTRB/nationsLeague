// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace fussballliga.Models
{
    public partial class SoccerLeagueContext : DbContext
    {
        public SoccerLeagueContext()
        {
        }

        public SoccerLeagueContext(DbContextOptions<SoccerLeagueContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Game> Games { get; set; }
        public virtual DbSet<Goal> Goals { get; set; }
        public virtual DbSet<League> Leagues { get; set; }
        public virtual DbSet<Player> Players { get; set; }
        public virtual DbSet<Team> Teams { get; set; }
        public virtual DbSet<TeamPlayer> TeamPlayers { get; set; }
        public virtual DbSet<TeamTrainer> TeamTrainers { get; set; }
        public virtual DbSet<Trainer> Trainers { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=127.0.0.1;Initial Catalog=SoccerLeague;User ID=sa;Password=SqlServer2019;TrustServerCertificate=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Game>(entity =>
            {
                entity.HasOne(d => d.AwayTeamNavigation)
                    .WithMany(p => p.GameAwayTeamNavigations)
                    .HasForeignKey(d => d.AwayTeam)
                    .HasConstraintName("FK__Game__AwayTeam__32E0915F");

                entity.HasOne(d => d.HomeTeamNavigation)
                    .WithMany(p => p.GameHomeTeamNavigations)
                    .HasForeignKey(d => d.HomeTeam)
                    .HasConstraintName("FK__Game__HomeTeam__31EC6D26");
            });

            modelBuilder.Entity<Goal>(entity =>
            {
                entity.HasKey(e => new { e.Minute, e.GameId })
                    .HasName("PK__Goals__919822447E9C402E");

                entity.HasOne(d => d.Game)
                    .WithMany(p => p.Goals)
                    .HasForeignKey(d => d.GameId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Goals__GameId__398D8EEE");

                entity.HasOne(d => d.TeamPlayer)
                    .WithMany(p => p.Goals)
                    .HasForeignKey(d => d.TeamPlayerId)
                    .HasConstraintName("FK__Goals__TeamPlaye__3A81B327");
            });

            modelBuilder.Entity<Team>(entity =>
            {
                entity.HasOne(d => d.League)
                    .WithMany(p => p.Teams)
                    .HasForeignKey(d => d.LeagueId)
                    .HasConstraintName("FK__Team__LeagueId__276EDEB3");
            });

            modelBuilder.Entity<TeamPlayer>(entity =>
            {
                entity.HasOne(d => d.Player)
                    .WithMany(p => p.TeamPlayers)
                    .HasForeignKey(d => d.PlayerId)
                    .HasConstraintName("FK__TeamPlaye__Playe__35BCFE0A");

                entity.HasOne(d => d.Team)
                    .WithMany(p => p.TeamPlayers)
                    .HasForeignKey(d => d.TeamId)
                    .HasConstraintName("FK__TeamPlaye__TeamI__36B12243");
            });

            modelBuilder.Entity<TeamTrainer>(entity =>
            {
                entity.HasOne(d => d.Team)
                    .WithMany(p => p.TeamTrainers)
                    .HasForeignKey(d => d.TeamId)
                    .HasConstraintName("FK__TeamTrain__TeamI__2F10007B");

                entity.HasOne(d => d.Trainer)
                    .WithMany(p => p.TeamTrainers)
                    .HasForeignKey(d => d.TrainerId)
                    .HasConstraintName("FK__TeamTrain__Train__2E1BDC42");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}